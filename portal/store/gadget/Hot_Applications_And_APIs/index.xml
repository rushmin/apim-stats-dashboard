<?xml version="1.0" encoding="UTF-8" ?>
    <Module>
    <ModulePrefs title="Bar Chart"
                 author="WSO2 Gadget Server"
                 height="230"
                 scrolling="true"
                 tags="charts,bar,visualization,data"
                 description="A generic Bar Chart gadget, that takes a json datasource as an input. It can be configured to fetch data in defined intervals. This gadget can be used to create dashboards with statistical data. This gadget can be reused as an iframe in any web page as it is self contained.">
     </ModulePrefs>
    <UserPref name="dataSource"
              display_name="Data Source"
              default_value="/portal/gadgets/bar-chart/datasource/dataFile4.jag">
    </UserPref>
    <!--UserPref name="options"
              display_name="Chart Options"
              default_value="/portal/gadgets/bar-chart/js/options-bar.js">
    </UserPref-->
    <UserPref name="updateGraph"
              display_name="Update Interval (s)"
              default_value="No">
    </UserPref>
    <Content type="html">
    <![CDATA[
 <html>
 <head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title>Bar Chart</title>
	<link href="css/flot-graph.css" rel="stylesheet" type="text/css">
	<link href="css/bootstrap.min.css" rel="stylesheet" type="text/css">
	<script language="javascript" type="text/javascript" src="js/excanvas.min.js"></script>
	<script language="javascript" type="text/javascript" src="js/jquery.js"></script>
	<script language="javascript" type="text/javascript" src="js/d3.min.js"></script>
	<script language="javascript" type="text/javascript" src="js/vega.js"></script>
	<script language="javascript" type="text/javascript" src="js/igviz.js"></script>
	<script language="javascript" type="text/javascript" src="js/gadgetconf.js"></script>
  <script language="javascript" type="text/javascript" src="js/outputAdapterUiLibrary.js"></script>
	<script language="javascript" type="text/javascript" src="js/main.js"></script>

</head>

<body>
			<div id="placeholder" class="demo-placeholder" style="height:90%"></div>

      <script>

        var datasource,type, columns,filter,maxUpdateValue;

        //this needs to be loaded from an autogenerated
        datasource = gadgetConfig.datasource;
        filter = gadgetConfig.filter;
        type = gadgetConfig.type;
        var counter = 0;
        maxUpdateValue = gadgetConfig.maxUpdateValue;

        //if gadget type is realtime, treat it different!
        if(type === "realtime") {
            columns = gadgetConfig.columns;
            //subscribe to websocket
            subscribe(datasource.split(":")[0], datasource.split(":")[1], '10', 'carbon.super',
                onRealTimeEventSuccessRecieval, onRealTimeEventErrorRecieval, 'localhost', '9443', 'WEBSOCKET', "SECURED");
        } else {

            getColumns();

            fetchData(drawChart);

        }

        function getColumns() {
          columns = gadgetConfig.columns;
        };

        function fetchData(callback) {
            $.ajax({
                url: "/portal/apis/api-stats/hot-apps-and-apis",
                method: "GET",
                contentType: "application/json",
                success: function(data) {
                    if (callback != null) {
                        callback(makeRows(data.stats));
                    }
                }
            });
        };


        function drawChart(data) {
            var dataTable = makeDataTable(data);
            gadgetConfig.chartConfig.width = $("#placeholder").width();
            gadgetConfig.chartConfig.height = $("#placeholder").height() - 65;
            var chartType = gadgetConfig.chartConfig.chartType;
            var xAxis = gadgetConfig.chartConfig.xAxis;

            if (chartType === "bar" && dataTable.metadata.types[xAxis] === "N") {
                dataTable.metadata.types[xAxis] = "C";
            }

            if(gadgetConfig.chartConfig.chartType==="table" || gadgetConfig.chartConfig.chartType==="drill") {
              igviz.draw("#placeholder", gadgetConfig.chartConfig, dataTable);
            } else {
                var chart = igviz.setUp("#placeholder", gadgetConfig.chartConfig, dataTable);
                chart.plot(dataTable.data);
            }
        };

        function makeDataTable(data) {
            var dataTable = {};
            dataTable.metadata = {};
            dataTable.metadata.names = [];
            dataTable.metadata.types = [];
            dataTable.data = [];


            if (columns.length > 0) {
                columns.forEach(function(column, i) {
                    var type = "N";
                    if (column.type == "STRING" || column.type == "string") {
                        type = "C";
                    }
                    dataTable.metadata.names.push(column.name);
                    dataTable.metadata.types.push(type);
                });
            }
            data.forEach(function(row, index) {
                for (var i = 0; i < row.length; i++) {
                    if (dataTable.metadata.types[i] == "N") {
                        data[index][i] = parseInt(data[index][i]);
                    }
                }
            });
            dataTable.data = data;
            return dataTable;
        };

        function makeRows(data) {
            var rows = [];
            for (var i = 0; i < data.length; i++) {
                var record = data[i];
                var row = [record.appilicationName, record.apiName, record.invocations];
                rows.push(row);
            };
            return rows;
        };



        //stuff required for realtime charting
        function onRealTimeEventSuccessRecieval(streamId, data) {
            drawRealtimeChart(data);
        };

        function onRealTimeEventErrorRecieval(dataError) {
            console.log("Error occurred " + dataError);
        };

        var dataTable;
        var chart;

        function drawRealtimeChart(data) {
            dataTable = makeDataTable(data);
            gadgetConfig.chartConfig.width = $("#placeholder").width();
            gadgetConfig.chartConfig.height = $("#placeholder").height() - 65;
            var chartType = gadgetConfig.chartConfig.chartType;
            var xAxis = gadgetConfig.chartConfig.xAxis;

            if (chartType === "bar" && dataTable.metadata.types[xAxis] === "N") {
                dataTable.metadata.types[xAxis] = "C";
            }

            if (counter == 0) {
                chart = igviz.setUp("#placeholder", gadgetConfig.chartConfig, dataTable);
                chart.setXAxis({
                    "labelAngle": -35,
                    "labelAlign": "right",
                    "labelDy": 0,
                    "labelDx": 0,
                    "titleDy": 25
                })
                    .setYAxis({
                        "titleDy": -30
                    })
                chart.plot(dataTable.data,null,maxUpdateValue);
                counter++;
            } else{
                chart.update(dataTable.data[0]);
            }
        };

      </script>

</body>
</html>

    ]]>
</Content>
</Module>
